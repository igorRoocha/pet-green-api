// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetGreen.Repository.Context;

namespace PetGreen.Repository.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20200122014141_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetGreen.Domain.Entities.Clinic", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClinicTypeID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email");

                    b.Property<string>("Facebook")
                        .HasColumnName("Facebook");

                    b.Property<string>("Logo")
                        .HasColumnName("Logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<string>("Site")
                        .HasColumnName("Site");

                    b.Property<string>("SocialReason");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasColumnName("TaxId");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("ID");

                    b.HasIndex("ClinicTypeID");

                    b.ToTable("CDClinic");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.ClinicType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("ID");

                    b.ToTable("CDClinicType");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClinicID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("Number");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("ClinicID");

                    b.HasIndex("UserID");

                    b.ToTable("CDContact");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.MidiaSocial", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClinicID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnName("URL");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("ID");

                    b.HasIndex("ClinicID");

                    b.ToTable("CDMidiaSocial");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("ID");

                    b.ToTable("CDProfile");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClinicID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnName("Day");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("EndHour")
                        .IsRequired()
                        .HasColumnName("EndHour");

                    b.Property<string>("StartHour")
                        .IsRequired()
                        .HasColumnName("StartHour");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("ID");

                    b.HasIndex("ClinicID");

                    b.ToTable("CDSchedules");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid?>("ClinicID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<string>("Password");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnName("PasswordSalt");

                    b.Property<Guid>("ProfileID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdateAt");

                    b.HasKey("ID");

                    b.HasIndex("ClinicID");

                    b.HasIndex("ProfileID");

                    b.ToTable("CDUser");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Clinic", b =>
                {
                    b.HasOne("PetGreen.Domain.Entities.ClinicType", "ClinicType")
                        .WithMany("Clinics")
                        .HasForeignKey("ClinicTypeID");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Contact", b =>
                {
                    b.HasOne("PetGreen.Domain.Entities.Clinic", "Clinic")
                        .WithMany("Contacts")
                        .HasForeignKey("ClinicID");

                    b.HasOne("PetGreen.Domain.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.MidiaSocial", b =>
                {
                    b.HasOne("PetGreen.Domain.Entities.Clinic", "Clinic")
                        .WithMany("MidiaSocial")
                        .HasForeignKey("ClinicID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("PetGreen.Domain.Entities.Clinic", "Clinic")
                        .WithMany("Schedules")
                        .HasForeignKey("ClinicID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetGreen.Domain.Entities.User", b =>
                {
                    b.HasOne("PetGreen.Domain.Entities.Clinic", "Clinic")
                        .WithMany("Users")
                        .HasForeignKey("ClinicID");

                    b.HasOne("PetGreen.Domain.Entities.Profile", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
